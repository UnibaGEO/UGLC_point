Index: 01.CONVERSION_CSV/02.COOLR/02_COOLR_CONVERSION.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#-----------------------------------------------------------------------------------------------------------------------\r\n#                                              UGLC DATAFRAME CONVERTER\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n# native dataframe:     COOLR report points - NASA\r\n# version:              4\r\n# authors:              Saverio Mancino, Anna Sblano111\r\n# affiliation:          Universit√† degli studi di Bari\r\n# date:                 29/01/2024\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n# Conversion\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n\r\nimport pandas as pd\r\nimport json\r\n\r\n\r\nimport pandas as pd\r\nimport json\r\n\r\n# Native Dataframe 02_COOLR_NATIVE loading\r\ndf_OLD = pd.read_csv(\"../../00.INPUT/NATIVE_DATASET/02_COOLR_NATIVE.csv\",low_memory=False)\r\n\r\n# JSON Lookup Tables Loading\r\nwith open('02_COOLR_LOOKUPTABLES.json', 'r') as file:\r\n    lookup_config = json.load(file)\r\n    lookup_tables = lookup_config[\"02_COOLR LOOKUP TABLES\"]\r\n\r\ndf_OLD['injuries'].fillna('ND', inplace=True)\r\ndf_OLD['fatalities'].fillna('ND', inplace=True)\r\n\r\n# Application of lookup Tables to the columns of the old DataFrame\r\nfor column in df_OLD.columns:\r\n    lookup_table_key = f\"{column}_lookup\"  # Lookup table match-Key construction\r\n\r\n    # Lookup Tables check if is a string or a dictionary\r\n    if lookup_table_key in lookup_tables and isinstance(lookup_tables[lookup_table_key], dict):\r\n        lookup_table = lookup_tables[lookup_table_key]\r\n\r\n        # If the lookup table is marked as \"ND\" the sytem will keep the original content\r\n        if lookup_table == \"ND\":\r\n            continue\r\n        else:\r\n            # Update just the no-\"ND\" columns\r\n            df_OLD[column] = df_OLD[column].map(lambda x: lookup_table.get(str(x), x))\r\n\r\n# null values replacement in the Native Dataframe\r\ndf_OLD = df_OLD.fillna(\"ND\")\r\n\r\n# New dataframe Configuration\r\nnew_data = {\r\n    'WKT_GEOM': [],\r\n    'NEW DATASET': [],\r\n    'ID': [],\r\n    'OLD DATASET': [],\r\n    'OLD ID': [],\r\n    'VERSION': [],\r\n    'COUNTRY': [],\r\n    'ACCURACY': [],\r\n    'START DATE': [],\r\n    'END DATE': [],\r\n    'TYPE': [],\r\n    'TRIGGER': [],\r\n    'AFFIDABILITY': [],\r\n    'PSV': [],\r\n    'DCMV': [],\r\n    'FATALITIES': [],\r\n    'INJURIES': [],\r\n    'NOTES': [],\r\n    'LINK': []\r\n}\r\n\r\n# New dataframe Creation\r\ndf_NEW = pd.DataFrame(new_data)\r\n\r\n# New Dataframe Updating with the Old Dataframe columns content values\r\ndf_NEW['WKT_GEOM'] = df_OLD['WKT']\r\ndf_NEW['NEW DATASET'] = \"UGLC\"\r\ndf_NEW['ID'] = range(1, len(df_OLD) + 1)\r\ndf_NEW['OLD DATASET'] = df_OLD['source']\r\ndf_NEW['OLD ID'] = df_OLD['ev_id']\r\ndf_NEW['VERSION'] = \"2019\"\r\ndf_NEW['COUNTRY'] = df_OLD['ctry_name']\r\ndf_NEW['ACCURACY'] = df_OLD['loc_acc']\r\ndf_NEW['START DATE'] = df_OLD['ev_date'].replace('ND', '1956/01/01')\r\ndf_NEW['END DATE'] = df_OLD['ev_date'].replace('ND', '2023/01/01')\r\ndf_NEW['TYPE'] = df_OLD['ls_cat']\r\ndf_NEW['TRIGGER'] = df_OLD['ls_trig']\r\ndf_NEW['AFFIDABILITY'] = \"CALC\"\r\ndf_NEW['PSV'] = \"CALC\"\r\ndf_NEW['DCMV'] = \"CALC\"\r\ndf_NEW['FATALITIES'] = df_OLD['fatalities']\r\ndf_NEW['INJURIES'] = df_OLD['injuries']\r\ndf_NEW['NOTES'] = \"Cooperative Open Online Landslide Repository - NASA, locality: \" + df_OLD['loc_desc'] + \", description: \" + df_OLD['ev_desc']\r\ndf_NEW['LINK'] = \"Source: \" + df_OLD['src_link']\r\n\r\nprint(df_OLD['fatalities'].unique())\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n# Corrections\r\n#-----------------------------------------------------------------------------------------------------------------------f\r\n\r\nfrom function import apply_country_corrections\r\nfrom function import apply_affidability_calculator\r\n\r\n\r\napply_country_corrections(df_NEW)\r\napply_affidability_calculator(df_NEW)\r\nprint(df_NEW['FATALITIES'])\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n# Output\r\n#-----------------------------------------------------------------------------------------------------------------------\r\n\r\n# Creation of the new updated Dataframe as a .csv file in the selected directory\r\ndf_NEW.to_csv('../../02.OUTPUT/DATASET_CONVERTED/02_COOLR_CONVERTED.csv', index=False)\r\nprint(\"________________________________________________________________________________________\")\r\nprint(\"COOLR-report points successfully converted as COOLR_02_CONVERTED.csv in the DATASET_CONVERTED directory\")\r\nprint(\"________________________________________________________________________________________\")\r\n#-----------------------------------------------------------------------------------------------------------------------
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01.CONVERSION_CSV/02.COOLR/02_COOLR_CONVERSION.py b/01.CONVERSION_CSV/02.COOLR/02_COOLR_CONVERSION.py
--- a/01.CONVERSION_CSV/02.COOLR/02_COOLR_CONVERSION.py	(revision 1e95720522f937bb6a63adc55cf26e312112beaf)
+++ b/01.CONVERSION_CSV/02.COOLR/02_COOLR_CONVERSION.py	(date 1706784790648)
@@ -29,7 +29,7 @@
 df_OLD['injuries'].fillna('ND', inplace=True)
 df_OLD['fatalities'].fillna('ND', inplace=True)
 
-# Application of lookup Tables to the columns of the old DataFrame
+# Application of lookup Tables to the columns of the old DataFrame.
 for column in df_OLD.columns:
     lookup_table_key = f"{column}_lookup"  # Lookup table match-Key construction
 
